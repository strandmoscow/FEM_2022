import osimport numpy as npfrom jinja2 import Environment, FileSystemLoaderimport matplotlib.pyplot as pltauthor_name="{Сенюк Даниил Игоревич}"author_name_short="{Сенюк Д. И.}"group="{РК6-75б}"variant="{19}"a = 3.0b = -5.0c = 0.0d = 5.0min_int = 1.0min_cond_type = 0min_value = -5.0max_int = 6.0max_cond_type = 0max_value = -10.0an_sol_for_c = "(-exp(5. / 3.) * (x - 16.) - 10. * exp((5. * x)/3.) + exp(10)* (x - 6.))/(exp(10) - exp(5./3.))"analytical_solution = "//frac{-e^{5 / 3}(x-16)-10 e^{(5 x) / 3}+e^{10}(x-6)}{e^{10}-e^{5 / 3}}"# Jinja initenvironment = Environment(    loader=FileSystemLoader("templates/"))base_template = environment.get_template("/labs/educmm_txb_COMPMATHLAB-Solution_N_M/educmm_lab_Variant_N_M-id.tex")base_res_file_name = f"res/labs/educmm_txb_COMPMATHLAB-Solution_N_M/educmm_lab_Variant_N_M-id.tex"base_text = base_template.render(    author_name=author_name,    author_name_short=author_name_short,    group=group,    variant=variant)code_tempate_lin = environment.get_template("code/lin.cc")code_tempate_var = environment.get_template("code/var.cc")code_file_name_lin_20 = f"code/lin_20/code_lin_20.cc"code_lin_20 = code_tempate_lin.render(    elem=20,    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    lin = "true",    an_sol_for_c = an_sol_for_c)code_file_name_lin_40 = f"code/lin_40/code_lin_40.cc"code_lin_40 = code_tempate_lin.render(    elem=40,    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    lin = "true",    an_sol_for_c = an_sol_for_c)code_file_name_cub_20 = f"code/cub_20/code_cub_20.cc"code_cub_20 = code_tempate_lin.render(    elem=20,    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    lin = "false",    an_sol_for_c = an_sol_for_c)code_file_name_cub_40 = f"code/cub_40/code_cub_40.cc"code_cub_40 = code_tempate_lin.render(    elem=40,    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    lin="false",    an_sol_for_c=an_sol_for_c)with open(base_res_file_name, mode="w+", encoding="utf-8") as base:    base.write(base_text)    print(f"... wrote {base_res_file_name}")with open(code_file_name_lin_20, mode="w+", encoding="utf-8") as code_lin_20_file:    code_lin_20_file.write(code_lin_20)    print(f"... wrote {code_file_name_lin_20}")with open(code_file_name_lin_40, mode="w+", encoding="utf-8") as code_lin_40_file:    code_lin_40_file.write(code_lin_40)    print(f"... wrote {code_file_name_lin_40}")with open(code_file_name_cub_20, mode="w+", encoding="utf-8") as code_cub_20_file:    code_cub_20_file.write(code_cub_20)    print(f"... wrote {code_file_name_cub_20}")with open(code_file_name_cub_40, mode="w+", encoding="utf-8") as code_cub_40_file:    code_cub_40_file.write(code_cub_40)    print(f"... wrote {code_file_name_cub_40}")os.system(f"g++ -o c20.out '/Users/andrejstrelcenko/Desktop/trud/new/code/cub_20/code_cub_20.cc' -std=c++11")os.system(f"mv c20.out '/Users/andrejstrelcenko/Desktop/trud/new/code/cub_20'")os.system(f"g++ -o c40.out '/Users/andrejstrelcenko/Desktop/trud/new/code/cub_40/code_cub_40.cc' -std=c++11")os.system(f"mv c40.out '/Users/andrejstrelcenko/Desktop/trud/new/code/cub_40'")os.system(f"g++ -o l20.out '/Users/andrejstrelcenko/Desktop/trud/new/code/lin_20/code_lin_20.cc' -std=c++11")os.system(f"mv l20.out '/Users/andrejstrelcenko/Desktop/trud/new/code/lin_20'")os.system(f"g++ -o l40.out '/Users/andrejstrelcenko/Desktop/trud/new/code/lin_40/code_lin_40.cc' -std=c++11")os.system(f"mv l40.out '/Users/andrejstrelcenko/Desktop/trud/new/code/lin_40'")os.system(f"'/Users/andrejstrelcenko/Desktop/trud/new/code/cub_20/c20.out'")os.system(f"'/Users/andrejstrelcenko/Desktop/trud/new/code/cub_40/c40.out'")os.system(f"'/Users/andrejstrelcenko/Desktop/trud/new/code/lin_20/l20.out'")os.system(f"'/Users/andrejstrelcenko/Desktop/trud/new/code/lin_40/l40.out'")# Matplotfig, ax = plt.subplots()absolute = np.loadtxt('res/labs/text/graph/abs.txt')x_abs = absolute[:, 0]y_abs = absolute[:, 1]# "lin_20.txt", "lin_40.txt", "cub_20.txt", "cub_40.txt"result_files = [{'name': "cub_20.txt", 'save_to': "res/labs/img/cub/20.png"},                {'name': "cub_40.txt", 'save_to': "res/labs/img/cub/40.png"},                {'name': "lin_20.txt", 'save_to': "res/labs/img/lin/20.png"},                {'name': "lin_40.txt", 'save_to': "res/labs/img/lin/40.png"}]for file in result_files:    absolute = np.loadtxt('res/labs/text/graph/' + file['name'])    x = absolute[:, 0]    y = absolute[:, 1]    ax.set(xlabel='X', ylabel='U')    ax.plot(x, y, 'r-', label='МКЭ')    ax.plot(x_abs, y_abs, 'b-', label='Аналитическое решение')    ax.grid()    ax.legend()    fig.savefig(file['save_to'])    plt.cla()with open('res/labs/text/pgr/cub_20.txt', 'r') as f:    pogr_num = float(f.read())code_tempate_pogr = environment.get_template("code/pogr.cc")code_file_name_pogr = f"code/pogr/pogr.cc"code_pogr = code_tempate_pogr.render(    elem=20,    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    lin = "true",    an_sol_for_c = an_sol_for_c,    cube=pogr_num)code_file_name_var = f"code/var/var.cc"code_var = code_tempate_var.render(    a=a,    b=b,    c=c,    d=d,    min_int=min_int,    min_cond_type=min_cond_type,    min_value=min_value,    max_int=max_int,    max_cond_type=max_cond_type,    max_value=max_value,    an_sol_for_c=an_sol_for_c,    cube=pogr_num)with open(code_file_name_pogr, mode="w+", encoding="utf-8") as code_pogr_file:    code_pogr_file.write(code_pogr)    print(f"... wrote {code_file_name_pogr}")with open(code_file_name_var, mode="w+", encoding="utf-8") as code_var_file:    code_var_file.write(code_var)    print(f"... wrote {code_file_name_var}")os.system(f"g++ -o pogr.out '/Users/andrejstrelcenko/Desktop/trud/new/code/pogr/pogr.cc' -std=c++11")os.system(f"mv pogr.out '/Users/andrejstrelcenko/Desktop/trud/new/code/pogr'")os.system(f"'/Users/andrejstrelcenko/Desktop/trud/new/code/pogr/pogr.out'")base_template = environment.get_template("labs/educmm_txb_COMPMATHLAB-Solution_N_M.tex")latex_text_file_name = f"res/labs/educmm_txb_COMPMATHLAB-Solution_N_M.tex"latex_text = base_template.render(    a=a,    a_int=int(a),    a_abs=abs(int(a)),    b=b,    b_int=int(b),    b_abs=abs(int(b)),    c=c,    c_int=int(c),    c_abs=abs(int(c)),    d=d,    d_int=int(d),    d_abs=abs(int(d)),    min_int = min_int,    min_int_int = int(min_int),    min_cond_type = min_cond_type,    min_value = min_value,    min_value_int = int(min_value),    max_int = max_int,    max_int_int = int(max_int),    max_cond_type = max_cond_type,    max_value = max_value,    max_value_int = int(max_value),    analytical_solution = analytical_solution,    an_sol_for_c = an_sol_for_c,    code=code_var)with open(latex_text_file_name, mode="w+", encoding="utf-8") as tex:    tex.write(latex_text)    print(f"... wrote {latex_text_file_name}")